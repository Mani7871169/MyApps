<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Monthly Expenses</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/linways/table-to-excel@v1.0.4/dist/tableToExcel.js"></script>
<script>
$(document).ready(function() {
    const tableBody = $("table tbody");

    // Load saved data from localStorage if available
    const savedData = localStorage.getItem("tableData");
   
    if(savedData) {
        tableBody.html(savedData);
        updateSubtotal();
        toggleButtonsVisibility();
    }

    $("#filterInput").on("keyup", function() {
            var value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function() {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

    // Initialize button visibility
    $("#update, #remove, #export").hide();

    // Calculate and display initial subtotal
    updateSubtotal();
    toggleButtonsVisibility();

    // Event listener for input validation on amount field
    $("#amount").on("input", function() {
        let val = $(this).val().replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
        if (val.indexOf('.') !== -1) {
            val = val.split('.');
            if (val[1].length > 2) val[1].length = 2;
            $(this).val(val.join('.'));
        } else {
            $(this).val(val);
        }
    });

    // Form submission event listener
    $("form").submit(function(event) {
        event.preventDefault();
        if (validateInputs()) {
            const description = $("#description").val();
            const amount = $("#amount").val();
            const status = $("#status").val();
            const paidBy = $("input[name='paidBy']:checked").val();

            if (!itemExists(description)) {
                const dateTime = new Date().toLocaleString();
                const newRow = `<tr>
                    <td><input type='checkbox' class='item-checkbox'></td>
                    <td>${description}</td>
                    <td>${amount}</td>
                    <td>${dateTime}</td>
                    <td>${status}</td>
                    <td>${paidBy}</td>
                </tr>`;
                tableBody.append(newRow);
                clearForm();
                updateSubtotal();
                saveData();
                toggleButtonsVisibility();
            } else {
                displayValidationMessage("Item already exists in the table.");
            }
        }
    });

    // Event listener for clicking a table row
    tableBody.on("click", "tr", function(event) {
        if (!$(event.target).is(":checkbox")) {
            $("table tbody tr.selected").removeClass("selected");
            $(this).addClass("selected");
            populateFormFromRow($(this));
            $("#submit").hide();
            $("#remove").hide();
            $("#export").hide();
            $("#update").show();
        }
    });

    // Update button click event listener
    $("#update").click(function() {
        if (validateInputs()) {
            const selectedRow = $("table tbody tr.selected");
            updateRowFromForm(selectedRow);
            clearForm();
            updateSubtotal();
            saveData();
            $("#update").hide();
            $("#submit").show();
            toggleButtonsVisibility();
        }
    });

    // Remove button click event listener
    $("#remove").click(function() {
        const selectedCheckboxes = $("table tbody tr td:first-child input:checked");
        if (selectedCheckboxes.length > 0) {
            selectedCheckboxes.closest("tr").remove();
            updateSubtotal();
            saveData();
            toggleButtonsVisibility();
        } else {
            alert("Please select a record to remove.");
        }
    });

    // Export button click event listener
    $("#export").click(function() {
        if ($("table tbody tr").length > 0) {
            const table = document.getElementsByTagName("table")[0];
            const currentDate = new Date();
  const fileName = `Budget_${currentDate.getDate()}_${currentDate.getMonth() + 1}_${currentDate.getFullYear()}.xlsx`;
            TableToExcel.convert(table, {
                name: fileName,
                sheet: {
                    name: `Budget_${currentDate.getDate()}_${currentDate.getMonth() + 1}_${currentDate.getFullYear()}`
                }
            });
        } else {
            alert("No records to export.");
        }
    });

    // Select all checkboxes in table body based on header checkbox state
    $("#check-all").click(function() {
        const isChecked = $(this).prop("checked");
        $("table tbody tr td:first-child input[type='checkbox']").prop("checked", isChecked);
    });

    function validateInputs() {
        let isValid = true;
        $("#validation-summary").empty();
        
        $("input").each(function() {
            if ($(this).attr("name") !== "filterInput")
            {
                if (!$(this).val()) {
                    isValid = false;
                    const fieldName = $(this).attr("name");
                    displayValidationMessage(`${capitalize(fieldName)} is required.`);
                }
            }
        });
        
        return isValid;
    }

    function itemExists(description) {
        let exists = false;
        tableBody.find("tr").each(function() {
            if ($(this).find("td:eq(1)").text() === description) {
                exists = true;
                return false; // Exit the loop if the item exists
            }
        });
        return exists;
    }

    function updateSubtotal() {
        let total = 0;
        tableBody.find("tr").each(function() {
            total += parseFloat($(this).find("td:eq(2)").text());
        });
        $("#subtotal").text(total.toFixed(2));
    }

    function clearForm() {
        $("#description, #amount").val('');
        $("input[value='gpay']").prop("checked", true);
        tableBody.find("tr.selected").removeClass("selected");
    }

    function populateFormFromRow(row) {
        $("#description").val(row.find("td:eq(1)").text());
        $("#amount").val(row.find("td:eq(2)").text());
        $("#status").val(row.find("td:eq(4)").text());
        $("input[name='paidBy'][value='" + row.find("td:eq(5)").text() + "']").prop("checked", true);
    }

    function updateRowFromForm(row) {
        row.find("td:eq(1)").text($("#description").val());
        row.find("td:eq(2)").text($("#amount").val());
        row.find("td:eq(4)").text($("#status").val());
        row.find("td:eq(5)").text($("input[name='paidBy']:checked").val());
        const dateTime = new Date().toLocaleString();
        row.find("td:eq(3)").text(dateTime);
    }

    function saveData() {
        if (tableBody.find("tr").length > 0) {
            localStorage.setItem("tableData", tableBody.html());
        }
    }

    function toggleButtonsVisibility() {
        const hasRows = tableBody.find("tr").length > 0;
        $("#remove, #export").toggle(hasRows);
    }

    function displayValidationMessage(message) {
        const alertHtml = `<div class="alert alert-danger" role="alert">${message}</div>`;
        $("#validation-summary").append(alertHtml);
    }

    function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }
});
</script>
<style>
    /* Odd and even row colors */
    tr:nth-child(odd) {
        background-color: #f2f2f2;
    }
    tr:nth-child(even) {
        background-color: #ffffff;
    }
    .selected {
        background-color: #e0f2d2; /* Light green */
    }
    th {
        text-align: center;
    }
    .filter-input {
            margin-bottom: 20px;
            margin-top: 20px;
            max-width: 300px;            
        }
</style>
</head>
<body>
    <div class="container">
        <div id="validation-summary"></div>
        <form>
            
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="description">Description:</label>
                        <input type="text" class="form-control" id="description" name="description">
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="amount">Amount:</label>
                        <input type="text" class="form-control" id="amount" name="amount">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label for="status">Status:</label>
                        <select class="form-control" id="status" name="status">
                            <option value="Pending">Pending</option>
                            <option value="Paid">Paid</option>
                            <option value="Cancelled">Cancelled</option>
                        </select>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label>Paid by:</label><br>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="paidBy" id="gpay" value="GPay" checked>
                            <label class="form-check-label" for="gpay">GPay</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="paidBy" id="byHand" value="By Hand">
                            <label class="form-check-label" for="byHand">By Hand</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" name="paidBy" id="online" value="Through Online">
                            <label class="form-check-label" for="online">Through Online</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <button type="submit" id="submit" class="btn btn-primary">Submit</button>
                    <button type="button" id="update" class="btn btn-success">Update</button>
                    <button type="button" id="remove" class="btn btn-danger">Remove</button>
                    <button id="export" type="button" class="btn btn-success">Export to Excel</button><a href="index.html">
    <button class="btn btn-primary">Back</button>
</a>

                </div>
            </div>
        </form>
        <div class="text-right">
            <input type="text" class="form-control filter-input" placeholder="Search for anything in the table..." name="filterInput" id="filterInput">
        </div>
        <table class="table table-bordered mt-3" id="MonthlyExpenses">
            <thead>
                <tr>
                    <th><input type="checkbox" id="check-all"></th>
                    <th><i class="fas fa-file-alt"></i> Description</th>
                    <th><i class="fas fa-dollar-sign"></i> Amount</th>
                    <th><i class="fas fa-calendar-alt"></i> Date & Time</th>
                    <th><i class="fas fa-info-circle"></i> Status</th>
                    <th><i class="fas fa-user"></i> Paid by</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input type="checkbox" class="item-checkbox"></td>
                    <td>Amma</td>
                    <td>8000</td>
                    <td></td>
                    <td>Pending</td>
                    <td>GPay</td>
                </tr>
                <tr>
                    <td><input type="checkbox" class="item-checkbox"></td>
                    <td>Amma</td>
                    <td>8000</td>
                    <td></td>
                    <td>Pending</td>
                    <td>GPay</td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2" style="text-align:right"><strong>Subtotal:</strong></td>
                    <td id="subtotal"></td>
                    <td></td> <!-- Empty cell for alignment -->
                    <td></td> <!-- Empty cell for alignment -->
                    <td></td> <!-- Empty cell for alignment -->
                </tr>
            </tfoot>
        </table>
    </div>
</body>
</html>
